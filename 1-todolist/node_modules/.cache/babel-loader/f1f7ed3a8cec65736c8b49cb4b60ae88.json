{"ast":null,"code":"var _jsxFileName = \"/Users/jeilee/Documents/web/mobile-app-idm/1-todolist/src/components/List.js\";\n//UPLOAD THIS ASSIGNMENT (PROVIDE A GLITCH LINK)\n//https://github.com/BarakChamo/Mobile-Application-Development/issues/1\nimport React, { Component } from 'react';\nimport ListItem from './ListItem';\nimport uuid from 'uuid';\nexport default class List extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      items: [{\n        id: uuid.v4(),\n        name: \"Milk\",\n        addDate: Date(Date.now()).toString(),\n        completed: false,\n        selected: false\n      }, {\n        id: uuid.v4(),\n        name: \"Coffee\",\n        addDate: Date(Date.now()).toString(),\n        completed: false,\n        selected: false\n      }, {\n        id: uuid.v4(),\n        name: \"Tea\",\n        addDate: Date(Date.now()).toString(),\n        completed: false,\n        selected: false\n      }, {\n        id: uuid.v4(),\n        name: \"Eggs\",\n        addDate: Date(Date.now()).toString(),\n        completed: false,\n        selected: false\n      }],\n      value: ''\n    };\n\n    this.onCheck = id => {\n      this.setState({\n        items: this.state.items.map(item => {\n          if (item.id === id) {\n            item.completed = !item.completed;\n          }\n\n          return item;\n        })\n      });\n    };\n\n    this.delItem = id => {\n      this.setState({\n        items: this.state.items.filter(item => item.id !== id)\n      });\n    };\n\n    this.multiSelect = id => {\n      this.setState({\n        items: this.state.items.map(item => {\n          if (item.id === id) {\n            item.selected = !item.selected;\n          }\n\n          return item;\n        })\n      });\n    };\n  }\n\n  onTextInputChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  onButtonClick() {\n    const list = this.state.items;\n    list.push({\n      id: uuid.v4(),\n      name: this.state.value,\n      addDate: Date(Date.now()).toString()\n    });\n    this.setState({\n      items: list,\n      value: \"\"\n    });\n  }\n\n  render() {\n    const listItems = [];\n\n    for (let i = 0; i < this.state.items.length; i++) {\n      listItems.push(React.createElement(ListItem, {\n        key: this.state.items[i].id,\n        name: this.state.items[i].name,\n        date: this.state.items[i].addDate,\n        completed: this.state.items[i].completed,\n        selected: this.state.items[i].selected,\n        id: this.state.items[i].id,\n        onCheck: this.onCheck,\n        delItem: this.delItem,\n        multiSelect: this.multiSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"New task?\",\n      value: this.state.value,\n      onChange: this.onTextInputChange.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      disabled: this.state.value === '',\n      onClick: this.onButtonClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"Add\"), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, listItems), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.state.items.filter(items => item.selected == true).length));\n  }\n\n} //multiple selection?\n//emoji support?","map":{"version":3,"sources":["/Users/jeilee/Documents/web/mobile-app-idm/1-todolist/src/components/List.js"],"names":["React","Component","ListItem","uuid","List","state","items","id","v4","name","addDate","Date","now","toString","completed","selected","value","onCheck","setState","map","item","delItem","filter","multiSelect","onTextInputChange","event","target","onButtonClick","list","push","render","listItems","i","length","bind"],"mappings":"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","sourcesContent":["//UPLOAD THIS ASSIGNMENT (PROVIDE A GLITCH LINK)\n//https://github.com/BarakChamo/Mobile-Application-Development/issues/1\n\nimport React, { Component } from 'react'\nimport ListItem from './ListItem'\nimport uuid from 'uuid';\n\nexport default class List extends Component {\n\n    //removed componentWillMount due to warning\n    state = {\n        items: [\n            {\n                id: uuid.v4(),\n                name: \"Milk\",\n                addDate: Date(Date.now()).toString(),\n                completed: false,\n                selected: false\n            },\n            {\n                id: uuid.v4(),\n                name: \"Coffee\",\n                addDate: Date(Date.now()).toString(),\n                completed: false,\n                selected: false\n            },\n            {\n                id: uuid.v4(),\n                name: \"Tea\",\n                addDate: Date(Date.now()).toString(),\n                completed: false,\n                selected: false\n            },\n            {\n                id: uuid.v4(),\n                name: \"Eggs\",\n                addDate: Date(Date.now()).toString(),\n                completed: false,\n                selected: false\n            }\n        ],\n\n        value: ''\n    }\n\n    onTextInputChange(event){\n        this.setState({value: event.target.value})\n    }\n\n    onButtonClick() {\n        const list = this.state.items;\n        list.push({id: uuid.v4(), name: this.state.value, addDate: Date(Date.now()).toString()})\n        this.setState({items: list, value: \"\"})\n    }\n\n    onCheck = (id) => {\n        this.setState({\n            items: this.state.items.map(item => {\n                if (item.id === id) {\n                    item.completed = !item.completed\n                }\n                return item\n            })\n        })\n    }\n\n    // The filter() method creates a new array with all elements that pass the test implemented by the provided function.\n    // newArr = arr.filter((element) => condition)\n    delItem = (id) => {\n        this.setState({\n            items: this.state.items.filter(item => item.id !== id)\n        }) \n    }\n\n    multiSelect = (id) => {\n        this.setState({\n            items: this.state.items.map(item => {\n                if (item.id === id) {\n                    item.selected = !item.selected\n                }\n                return item\n            })\n        })\n    }\n\n    render() {\n\n        const listItems = []\n    \n        for(let i = 0; i < this.state.items.length; i++) {\n          listItems.push(<ListItem\n             key={this.state.items[i].id} \n             name={this.state.items[i].name} \n             date={this.state.items[i].addDate} \n             completed={this.state.items[i].completed}\n             selected={this.state.items[i].selected}\n             id = {this.state.items[i].id}\n             onCheck={this.onCheck}\n             delItem={this.delItem}\n             multiSelect={this.multiSelect}\n             />)\n        }\n\n        return (\n            <div>\n                <input type=\"text\" placeholder='New task?' value={this.state.value} onChange={this.onTextInputChange.bind(this)}/>\n                <button disabled={this.state.value === ''} onClick={this.onButtonClick.bind(this)}>Add</button>\n                <ul>\n                    {listItems}\n                </ul>\n                <div>{this.state.items.filter(items => item.selected == true).length}</div>\n            </div>\n        )\n    }\n}\n\n//multiple selection?\n//emoji support?\n"]},"metadata":{},"sourceType":"module"}